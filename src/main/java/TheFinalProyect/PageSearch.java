package com.d.thefinalproyect;

import com.d.thefinalproyect.grapUtils.BasicDialogs;
import com.d.thefinalproyect.grapUtils.RoundedPanel;
import com.d.thefinalproyect.grapUtils.WindowTemplate;

import com.d.thefinalproyect.more.CompareByAutor;
import com.d.thefinalproyect.more.CompareByEditorial;
import com.d.thefinalproyect.more.CompareByISBN;
import com.d.thefinalproyect.more.CompareByPages;
import com.d.thefinalproyect.more.CompareByTitle;
import com.d.thefinalproyect.more.Libro;
import com.d.thefinalproyect.more.Others;
import java.util.TreeSet;

public class PageSearch extends RoundedPanel implements WindowTemplate {
    ///
    /// Atributos
    ///
    static int SEARCH_BY_TITLE = 0;
    static int SEARCH_BY_AUTOR = 1;
    static int SEARCH_BY_EDITORIAL = 2;
    static int SEARCH_BY_ISBN = 3;
    static int SEARCH_BY_PAGES = 4;
    
    private TreeSet<Libro> treebooks;
    private int typeSearchInt;
    
    ///
    /// Metodos
    ///
    /** Constructor */
    public PageSearch(TreeSet tree) {
        super(40);
        initComponents();
        
        this.treebooks = tree;
        this.typeSearchInt = PageSearch.SEARCH_BY_TITLE;
        
        windowConfig();
    }
    
    private void search(Libro libro) {
        Libro resultado = null;
        
        if(treebooks.contains(libro)) {
            if((resultado = treebooks.floor(libro)) != null) {
                table.setModel(Others.onlyObjectTable(resultado));
                return;
            }
        }
           
        BasicDialogs.error(this, "El libro no se encuentra en el arbol. \nPrueve con otro", "Sin resultados");
        showTree();
    }
    
    private void showTree() {
        table.setModel(Others.treeToTable(treebooks));
    }
    
    @Override
    public void windowConfig() {
        if(treebooks.isEmpty()) {
            searchType.setEnabled(false);
            buscar.setEnabled(false);
        }
        showTree();
    }

    @Override
    public void clearInputs() {
        toSearch.setText("");
        showTree();
    }

    @Override
    public boolean validateFields() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void close() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    ///
    /// Inicializacion de los elementos
    ///
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        tagForSearchField = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        toSearch = new javax.swing.JTextField();
        searchType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(63, 56, 66));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x48/IconElement.png"))); // NOI18N
        jLabel1.setText("Buscar");

        buscar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x24/IconElement.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        tagForSearchField.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        tagForSearchField.setForeground(new java.awt.Color(153, 153, 153));
        tagForSearchField.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        tagForSearchField.setText("Titulo");

        cancelar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x24/ImplicitTransition.png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        searchType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Titulo", "Autor", "Editorial", "ISBN", "Paginas" }));
        searchType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTypeActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo de Busqueda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 832, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(tagForSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagForSearchField))
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    ///
    /// Eventos de los componentes
    ///
    /** 
     * Elegir el tipo de busqueda
     * 
     * @param evt 
     */
    private void searchTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTypeActionPerformed
        typeSearchInt = this.searchType.getSelectedIndex();
        
        if(typeSearchInt == SEARCH_BY_TITLE) {
            tagForSearchField.setText("Titulo");
            treebooks = Others.transformTree(treebooks, new CompareByTitle());
        }
        else if(typeSearchInt == SEARCH_BY_AUTOR) {
            tagForSearchField.setText("Autor");
            treebooks = Others.transformTree(treebooks, new CompareByAutor());
        }
        else if(typeSearchInt == SEARCH_BY_EDITORIAL) {
            tagForSearchField.setText("Editorial");
            treebooks = Others.transformTree(treebooks, new CompareByEditorial());
        }
        else if(typeSearchInt == SEARCH_BY_ISBN) {
            tagForSearchField.setText("ISBN");
            treebooks = Others.transformTree(treebooks, new CompareByISBN());
        }
        else if(typeSearchInt == SEARCH_BY_PAGES) {
            tagForSearchField.setText("Fecha");
            treebooks = Others.transformTree(treebooks, new CompareByPages());
        }
        
        showTree();
    }//GEN-LAST:event_searchTypeActionPerformed

    /**
     * Evento para cancelar
     * @param evt 
     */
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        clearInputs();
    }//GEN-LAST:event_cancelarActionPerformed

    /** 
     * Evento para el boton de busqueda
     * @param evt 
     */
    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        Libro libro = null;
        
        if(typeSearchInt == SEARCH_BY_TITLE) {
            libro = new Libro(toSearch.getText(),0,0,"","","");
        }
        else if(typeSearchInt == SEARCH_BY_AUTOR) {
            libro = new Libro("",0,0,"","",toSearch.getText());
        }
        else if(typeSearchInt == SEARCH_BY_EDITORIAL) {
            libro = new Libro("",0,0,"",toSearch.getText(),"");
        }
        else if(typeSearchInt == SEARCH_BY_ISBN) {
            try {
                libro = new Libro("",Integer.parseInt(toSearch.getText()),0,"","","");
            } catch(Exception e) {
                BasicDialogs.error(this, "Ingrese un valor numerico", "Valor incorrecto");
                return;
            }
        }
        else if(typeSearchInt == SEARCH_BY_PAGES) {
            try {
                libro = new Libro("",0, Integer.parseInt(toSearch.getText()),"","","");
            } catch(Exception e) {
                BasicDialogs.error(this, "Ingrese un valor numerico", "Valor incorrecto");
                return;
            }
        }
        
        search(libro);
    }//GEN-LAST:event_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> searchType;
    private javax.swing.JTable table;
    private javax.swing.JLabel tagForSearchField;
    private javax.swing.JTextField toSearch;
    // End of variables declaration//GEN-END:variables

    
}
